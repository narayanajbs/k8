apiVersion: v1
kind: Service
metadata:
    name: Roboshope

---

apiVersion: v1
kind: PersistanceVolume
metadata:
    name: my_nginix_pvc
    namespace: Roboshope
spec:
    capacity:
     storage: 40Gi
    volumeMode: fileSystem
    accessModes: 
    - ReadWriteOnce 
    presistanceVolumeClaimPolicy: Retain
    storageClassName: gp2
    hostpath:
     hostpath: /data/share

---
apiVerion: v1
kind: PresistanceVolumeClaim
metadata:
    name: my_nginix_pvc
    namespace: Roboshope
spec:
    accessModes: ReadWriteOnce
    requests:
     resources:
         storage: 40Gi
    storageClassName: gp2
---
apiVerion: v1
kind: ConfigMap
metadata:
    name: my_nginix_config
    namespace: Roboshope
spec:
 data: 
    ngnix.config: |
     server{
       listen: 80;
       server_name localhost;
       return 301 https://$host$request_uri;
     }
     server {
       listen 443 ssl;
       ssl_certificate /etc/nginix/ssl/cert.pem;
       ssl_certificate_key /etc/nginx/ssl/key.pem;

        location /{
            root /user/data/share/nginx/html
            nginx nginx.html nginx.html
        }
     }  
---
apiVerion: apps/v1
kind: Deployment
metadata:
    name: nginx_deployment
    namespace: Roboshope
spec:
    replicas: 1
    selector:
        matchLabels:
            app: mynginx
    template:
        metadata:
            name: nginx_pod
        labels:
            app: mynginx
        spec:
            containers:
            - name : nginx_image
              image: naginx:latest
              ports:
              - containerPorts: 80
            volumeMounts:
            - name: nginx_mnt
              mountPath: /user/share/nginx/html
              subpath: nginx.config
            - name: nginx_pvc
              mountPath: /user/data/nginx
    volumes:
    -   name: nginx_mnt
        configmap:
            name: my_nginix_config
    -   name: nginx_pvc
        presistanceVolumeClaim:
            claimName: my_nginix_pvc


---
apiVerion: apps/v1
kind: Service
metadata:
    name: nginx_service
    namespace: Roboshope
spec:
    selector:
    matchLabels: 
        app: mynginx
    ports:
    - protocol: tcp
      targetport: 80
      port: 80
    type: LoadBalancer
---
apiapiVerion: autoscaling/v2 
kind: HarizontalPodAutoscaling
metadata:
    name: nginx_hpa
    namespace: Roboshope
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: nginx_deployment
    minReplicas: 1
    maxReplicas: 10
    metrics:
        - type: Resource
          resource: CPU
          target:
            type: Utilization
            averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: nginx-ingress
    namesapce: Roboshope
    annotations: 
        alb.ingress.kubernetes.io/scheme : internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/tags: Environment - Dev,Project - Roboshope
        alb.ingress.kubernetes.io/group.name: DevOps
        alb.ingress.kubernetes.io/ssl-redirect: "true"
        alb.ingress.kubernetes.io/rewrite-target: / 
        alb.ingress.kubernetes.io/path-type: Prefix
        #nginx.ingress.kubernetes.io/rewrite-target: / 
spec:
    ingressClassName: alb
    rules: 
        - host: onlineDevOps.com
          http:
            paths:
            - path: "/"  # path: "/myapp/*)"
              pathType: prefix
            backend:
                service:
                    name: nginx_service
                    port: 80
    tls:
      - hosts:
        - onlineDevOps.com 
        secretsName: nginx-secret-tls 